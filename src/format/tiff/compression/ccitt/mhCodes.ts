/**
 * TODO: Пока что эксперимент
 */

// Table 1/T.4 Terminating codes
// indexes from 0 to 63
type TermCodeDef = [string, string]; // white, black, length = index

const termCodes: TermCodeDef[] = [
  ["00110101", "0000110111"],
  ["000111", "010"],
  ["0111", "11"],
  ["1000", "10"],
  ["1011", "011"],
  ["1100", "0011"],
  ["1110", "0010"],
  ["1111", "00011"],
  ["10011", "000101"],
  ["10100", "000100"],
  ["00111", "0000100"],
  ["01000", "0000101"],
  ["001000", "0000111"],
  ["000011", "00000100"],
  ["110100", "00000111"],
  ["110101", "000011000"],
  ["101010", "0000010111"],
  ["101011", "0000011000"],
  ["0100111", "0000001000"],
  ["0001100", "00001100111"],
  ["0001000", "00001101000"],
  ["0010111", "00001101100"],
  ["0000011", "00000110111"],
  ["0000100", "00000101000"],
  ["0101000", "00000010111"],
  ["0101011", "00000011000"],
  ["0010011", "000011001010"],
  ["0100100", "000011001011"],
  ["0011000", "000011001100"],
  ["00000010", "000011001101"],
  ["00000011", "000001101000"],
  ["00011010", "000001101001"],
  ["00011011", "000001101010"],
  ["00010010", "000001101011"],
  ["00010011", "000011010010"],
  ["00010100", "000011010011"],
  ["00010101", "000011010100"],
  ["00010110", "000011010101"],
  ["00010111", "000011010110"],
  ["00101000", "000011010111"],
  ["00101001", "000001101100"],
  ["00101010", "000001101101"],
  ["00101011", "000011011010"],
  ["00101100", "000011011011"],
  ["00101101", "000001010100"],
  ["00000100", "000001010101"],
  ["00000101", "000001010110"],
  ["00001010", "000001010111"],
  ["00001011", "000001100100"],
  ["01010010", "000001100101"],
  ["01010011", "000001010010"],
  ["01010100", "000001010011"],
  ["01010101", "000000100100"],
  ["00100100", "000000110111"],
  ["00100101", "000000111000"],
  ["01011000", "000000100111"],
  ["01011001", "000000101000"],
  ["01011010", "000001011000"],
  ["01011011", "000001011001"],
  ["01001010", "000000101011"],
  ["01001011", "000000101100"],
  ["00110010", "000001011010"],
  ["00110011", "000001100110"],
  ["00110100", "000001100111"],
];

export const EOL = -1;
export const EolCode = "000000000001";

// Table 2/T.4 Make-up codes
type MakeUpCode = [number, string, string]; // run-length, white, black
const makeUpCodes: MakeUpCode[] = [
  [64, "11011", "0000001111"],
  [128, "10010", "000011001000"],
  [192, "010111", "000011001001"],
  [256, "0110111", "000001011011"],
  [320, "00110110", "000000110011"],
  [384, "00110111", "000000110100"],
  [448, "01100100", "000000110101"],
  [512, "01100101", "0000001101100"],
  [576, "01101000", "0000001101101"],
  [640, "01100111", "0000001001010"],
  [704, "011001100", "0000001001011"],
  [768, "011001101", "0000001001100"],
  [832, "011010010", "0000001001101"],
  [896, "011010011", "0000001110010"],
  [960, "011010100", "0000001110011"],
  [1024, "011010101", "0000001110100"],
  [1088, "011010110", "0000001110101"],
  [1152, "011010111", "0000001110110"],
  [1216, "011011000", "0000001110111"],
  [1280, "011011001", "0000001010010"],
  [1344, "011011010", "0000001010011"],
  [1408, "011011011", "0000001010100"],
  [1472, "010011000", "0000001010101"],
  [1536, "010011001", "0000001011010"],
  [1600, "010011010", "0000001011011"],
  [1664, "011000", "0000001100100"],
  [1728, "010011011", "0000001100101"],
  [EOL, EolCode, "00000000000"],
];

// Additional make-up codes
type AddMakeUpCode = [number, string]; // run-length, code(black & white)
const addMakeUpCodes: AddMakeUpCode[] = [
  [1792, "00000001000"],
  [1856, "00000001100"],
  [1920, "00000001101"],
  [1984, "000000010010"],
  [2048, "000000010011"],
  [2112, "000000010100"],
  [2176, "000000010101"],
  [2240, "000000010110"],
  [2304, "000000010111"],
  [2368, "000000011100"],
  [2432, "000000011101"],
  [2496, "000000011110"],
  [2560, "000000011111"],
];

export type MHDecodeDict = Record<string, number>;

export const enum MHIndex {
  white = 0,
  black = 1,
}

export const createDecodeTermDict = (): [MHDecodeDict, MHDecodeDict] => {
  const whiteDict: MHDecodeDict = {};
  const blackDict: MHDecodeDict = {};
  termCodes.forEach(([whiteCode, blackCode], length) => {
    whiteDict[whiteCode] = length;
    blackDict[blackCode] = length;
  });
  return [whiteDict, blackDict];
};

export const createDecodeMakeUpDict = (): [MHDecodeDict, MHDecodeDict] => {
  const whiteDict: MHDecodeDict = {};
  const blackDict: MHDecodeDict = {};
  makeUpCodes.forEach(([length, whiteCode, blackCode]) => {
    whiteDict[whiteCode] = length;
    blackDict[blackCode] = length;
  });
  return [whiteDict, blackDict];
};

export const createAddMakeUpDict = (): MHDecodeDict =>
  addMakeUpCodes.reduce(
    (dict, [len, code]) => ({
      ...dict,
      [code]: len,
    }),
    {}
  );
