h1 Use cases for Converer using

Converter
  async getRowsReader
  async getRowsWriter
  async getSurface

ImageReader is used to write files. Because it reads the image and writes the file.
  readRow(y)
  finish()

ImageWriter - to read files. 
  getRow(y)
  flushRow()
  finish

----------------------------
Write B16G16R16 to B8G8R8
----------------------------
- cvt1: B16G16R16 -> B8G8R8 RowConverter
- cvt2: SurfaceConverer

acc1 = cvt1.getImageReader()
    ...
progress("write", y)
row = acc1.readRow(y)
    ...
acc1.finish

------------------------------
Read I8 to B8G8R8
------------------------------
Правильно будет, если информация

------------------------------

-----------------------------------
Write surface B16G16R16 to I8 file
-----------------------------------
- cvt1: B8G8R8 -> I8 Quant2Converter(nextCvt: cvt2)
- cvt2: B16G16R16 -> B8G8R8  RowConverter(prevInfo, nextCvt: cvt3, rowCvt)
- cvt3: SurfaceConverer(surface B16G16R16)
writeFile(converter: cvt1, progress)
acc1 = cvt1.getImageReader
    запись предполагает, что исходное изображение существует, а конечное - нет.
    поэтому для двухпроходного алгоритма лучше сразу запросить исходное изображение.
    dstSurface (I8) = new SurfaceStd(...)
    srcSurface (B8G8R8) = cvt2.getSurface()
        построчный конвертер не имеет своего изображения. Поэтому он должен его построить
        dstSurface = new SurfaceStd(B8G8R8, ...)
        acc3 = cvt3.getImageReader() - from source surface
        progress("quant2", y)
        srcRow = acc3.readRow(y)
            ret surface.getRowBuffer(y)
        rowCvt(srcRow, dstSurface.getRowBuffer(y))
        acc3.finish()
        return dstSurface
    hist = Histogram
    hist.addColors(srcSurface)
    hist.makePalette() <- здесь желательно определить параметры с учетом следующих конвертеров. т.к если следующий конвертер в I4, то лучше сразу 16 цветов  
progress("write", y)
row = acc1.readRow(y)
    return dstSurface.getRowBuffer(y)
acc1.finish() - для quant2 пуст, т.к. для других конвертеров оно вызовется при создании исх. изображения


----------------------------------
Read B16G16R16 file to I8 surface
----------------------------------


********************************
deprecated
-----------------------------------
Write surface B16G16R16 to G4 file
-----------------------------------
Converers:
- cvt1: SurfaceConverer(surface: B16G16R16 image)
- cvt2: RowsConverter(rowCvt: CvtBGR16to8, nextCvt: cvt1, {maxPalSize: 16})
- cvt3: Quant2Converter(newCvt: cvt2)
- cvt4: RowsConverter(rowCvt: CvtG8toG4, nextCvt: cvt3)
acc = cvt4.getRowReadAccess
  tmpBuf = Buffer(G4)
  nextAcc = cvt3.getRowReadAccess
    hist = Histogram()
    srcSurface = cvt2.getSurface
    tmpSurface = new Surface(Indexed8)
    acc = cvt2.getRowReadAccess
      tmpRow = Buffer(BGR8)
      nextAcc = cvt1.getRowReadAccess
    for each y in tmpSurface:
      row = acc.readRow(y);
        srcRow(BGR16) = cvt1.readRow() <- surface.getRowBuffer(y)
        transform(srcRow to tmpRow)
        return tmpRow
      hist.cvt(row to tmpSurface.getRowBuffer(y))
acc.readRow(y)
  transform(nextAcc.readRow(y):G8 to tmpBuf:G4)
  return tmpBuf
acc.onFinish
      
----------------------------------
Read B16G16R16 file to G4 surface
----------------------------------
- cvt1: RowsConverter(CvtRGB16to8, cvt2)
- cvt2: Quant2Converter(cvt3)
- cvt3: RowsConverter(CvtG8toG4, cvt4)
- cvt4: SurfaceConverer(surface G4)
acc1 = cvt1.getRowWriteAccess()
    tmpBuf = Buffer(RGB16)
    acc2 = cvt2.getRowWriteAccess()
      tmpSurface = Surface(BGR8)
progress("read", y)
buf = acc1.getBuffer(y) <- tmpBuf
buf[x] = ...
acc1.flushBuffer(y)
    dst = nextAcc.getRowBuffer(y) <- tmpSurface.getRowBuffer(y)
    cvtRow(tmpBuf, dst)
    nextAcc.flushBuffer(y)
progress("read", height)
acc1.finish()
    nextAcc.finish()
        hist = Histogram
        hist.addColors(tmpSurface)
        hist.makePalette
        tmpAcc = cvt3.getRowWriteAccess()
            tmpBuf = Buffer(G8)
        for each y in tmpSurface
            progress("quant2", y)
            dst = tmpAcc.getBuffer(y) <- tmpBuf
            hist.cvt(8 to 4: tmpSurface.getRowBuffer(y), dst)
            tmpAcc.flushBuffer(y)
                buf = acc4.getBuffer(y) <- surface.getRowBuffer(y)
                cvtRow(tmpBuf:G8, buf:G4)
                acc4.flushBuffer() - none

